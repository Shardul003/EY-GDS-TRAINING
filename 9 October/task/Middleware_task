from fastapi import FastAPI, Request
import time
import asyncio

app = FastAPI()

# Middleware to record how long each request takes (in milliseconds)
@app.middleware("http")
async def track_request_duration(req: Request, proceed):
    start = time.time()
    response = await proceed(req)
    duration_ms = (time.time() - start) * 1000  # convert to ms
    response.headers["X-Response-Time-ms"] = f"{duration_ms:.2f}"
    return response

# Sample endpoint
@app.get("/members")
async def list_members():
    await asyncio.sleep(0.2)  # simulate processing delay
    return {"members": ["Shardul", "Om"]}
